# -*- coding: utf-8 -*-
"""CCFD- Credit Card Detection Fraud

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11jgrrK5MIiJJHhSq2uuchMBmQQhPx0FA
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import sklearn

Fraud_Credit = pd.read_csv('/creditcard.csv')

Fraud_Credit.head()
#Just a note for the mentor 0 means true transacations 1 means fraud

Fraud_Credit.tail()

Fraud_Credit.info()

Fraud_Credit.isnull().sum()
#Hi sir if you are wondering what I'm doing here
#I'm just checking for null values

Fraud_Credit['Class'].value_counts()
#Think I'm gonna split the data so it is nice to use for the algorithm

True1 = Fraud_Credit[Fraud_Credit.Class == 0]
Scam = Fraud_Credit[Fraud_Credit.Class == 1]

print(True1.shape)
print(Scam.shape)

True1.Amount.describe()
#Cool function I discovered it yesterday

Fraud_Credit.groupby('Class').mean()

True1_sample = True1.sample(n=492)

Better_Dataset = pd.concat([True1_sample, Scam], axis=0)

Better_Dataset.head

Better_Dataset.tail()

Better_Dataset.info()

Better_Dataset['Class'].value_counts()
#Look sir I equalized the data

Better_Dataset.groupby('Class').mean()
#Still no change but I have an idea

X = Better_Dataset.drop(columns='Class', axis=1)
Y = Better_Dataset['Class']

print(X)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

model = LogisticRegression()
#LOL I almost forgot

#This is the best moment of coding
model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_evaluation = accuracy_score(X_train_prediction, Y_train)

print('Accuracy_of_the_Training_Data', training_data_evaluation)
#Nice score right??????????/

X_test_prediction = model.predict(X_test)
test_data_evaluation = accuracy_score(X_test_prediction, Y_test)

print('Accuracy_of_the_test_dataset', test_data_evaluation)

!pip install streamlit

